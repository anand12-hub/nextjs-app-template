{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/app/login/page.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState, useEffect } from 'react';\nimport Link from 'next/link';\nimport { useRouter } from 'next/navigation';\nimport { login, register, getCurrentUser } from '@/lib/auth';\n\nconst LoginPage: React.FC = () => {\n  const router = useRouter();\n  const [isLogin, setIsLogin] = useState(true);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [success, setSuccess] = useState<string | null>(null);\n\n  const [loginForm, setLoginForm] = useState({\n    email: '',\n    password: ''\n  });\n\n  const [registerForm, setRegisterForm] = useState({\n    name: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n\n  // Check if user is already logged in\n  useEffect(() => {\n    const currentUser = getCurrentUser();\n    if (currentUser) {\n      router.push('/');\n    }\n  }, [router]);\n\n  const handleLoginSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setLoading(true);\n    setError(null);\n    setSuccess(null);\n\n    try {\n      // Basic validation\n      if (!loginForm.email || !loginForm.password) {\n        setError('Please fill in all fields');\n        return;\n      }\n\n      const response = await login({\n        email: loginForm.email,\n        password: loginForm.password\n      });\n\n      if (response.success) {\n        setSuccess('Login successful! Redirecting...');\n        setTimeout(() => {\n          router.push('/');\n        }, 1500);\n      } else {\n        setError(response.message);\n      }\n    } catch (err) {\n      console.error('Login error:', err);\n      setError('An unexpected error occurred. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleRegisterSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setLoading(true);\n    setError(null);\n    setSuccess(null);\n\n    try {\n      // Basic validation\n      if (!registerForm.name || !registerForm.email || !registerForm.password || !registerForm.confirmPassword) {\n        setError('Please fill in all fields');\n        return;\n      }\n\n      if (registerForm.password !== registerForm.confirmPassword) {\n        setError('Passwords do not match');\n        return;\n      }\n\n      if (registerForm.password.length < 6) {\n        setError('Password must be at least 6 characters long');\n        return;\n      }\n\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n      if (!emailRegex.test(registerForm.email)) {\n        setError('Please enter a valid email address');\n        return;\n      }\n\n      const response = await register({\n        name: registerForm.name,\n        email: registerForm.email,\n        password: registerForm.password\n      });\n\n      if (response.success) {\n        setSuccess('Registration successful! Redirecting...');\n        setTimeout(() => {\n          router.push('/');\n        }, 1500);\n      } else {\n        setError(response.message);\n      }\n    } catch (err) {\n      console.error('Registration error:', err);\n      setError('An unexpected error occurred. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleDemoLogin = async () => {\n    setLoginForm({\n      email: 'test@example.com',\n      password: '123456'\n    });\n    \n    setLoading(true);\n    setError(null);\n    \n    try {\n      const response = await login({\n        email: 'test@example.com',\n        password: '123456'\n      });\n\n      if (response.success) {\n        setSuccess('Demo login successful! Redirecting...');\n        setTimeout(() => {\n          router.push('/');\n        }, 1500);\n      } else {\n        setError(response.message);\n      }\n    } catch (err) {\n      console.error('Demo login error:', err);\n      setError('Demo login failed. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 flex flex-col justify-center py-12 sm:px-6 lg:px-8\">\n      <div className=\"sm:mx-auto sm:w-full sm:max-w-md\">\n        <div className=\"text-center\">\n          <Link href=\"/\" className=\"inline-block\">\n            <img \n              src=\"https://placehold.co/150x50?text=Amazon+Clone+Logo\" \n              alt=\"Amazon Clone logo for authentication page\" \n              className=\"mx-auto h-12 w-auto\"\n              onError={(e) => {\n                e.currentTarget.style.display = 'none';\n                e.currentTarget.nextElementSibling?.classList.remove('hidden');\n              }}\n            />\n            <h1 className=\"hidden text-2xl font-bold text-gray-900\">Amazon Clone</h1>\n          </Link>\n        </div>\n        \n        <h2 className=\"mt-6 text-center text-3xl font-bold text-gray-900\">\n          {isLogin ? 'Sign in to your account' : 'Create your account'}\n        </h2>\n        <p className=\"mt-2 text-center text-sm text-gray-600\">\n          {isLogin ? \"Don't have an account? \" : 'Already have an account? '}\n          <button\n            onClick={() => {\n              setIsLogin(!isLogin);\n              setError(null);\n              setSuccess(null);\n            }}\n            className=\"font-medium text-blue-600 hover:text-blue-500\"\n          >\n            {isLogin ? 'Sign up' : 'Sign in'}\n          </button>\n        </p>\n      </div>\n\n      <div className=\"mt-8 sm:mx-auto sm:w-full sm:max-w-md\">\n        <div className=\"bg-white py-8 px-4 shadow sm:rounded-lg sm:px-10\">\n          {/* Demo Login Button */}\n          {isLogin && (\n            <div className=\"mb-6\">\n              <button\n                onClick={handleDemoLogin}\n                disabled={loading}\n                className=\"w-full flex justify-center py-2 px-4 border border-gray-300 rounded-md shadow-sm bg-white text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed\"\n              >\n                {loading ? 'Signing in...' : 'Try Demo Account'}\n              </button>\n              <p className=\"mt-2 text-xs text-gray-500 text-center\">\n                Email: test@example.com | Password: 123456\n              </p>\n              \n              <div className=\"mt-4 relative\">\n                <div className=\"absolute inset-0 flex items-center\">\n                  <div className=\"w-full border-t border-gray-300\" />\n                </div>\n                <div className=\"relative flex justify-center text-sm\">\n                  <span className=\"px-2 bg-white text-gray-500\">Or continue with</span>\n                </div>\n              </div>\n            </div>\n          )}\n\n          {/* Error Message */}\n          {error && (\n            <div className=\"mb-4 bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded relative\">\n              <span className=\"block sm:inline\">{error}</span>\n            </div>\n          )}\n\n          {/* Success Message */}\n          {success && (\n            <div className=\"mb-4 bg-green-50 border border-green-200 text-green-700 px-4 py-3 rounded relative\">\n              <span className=\"block sm:inline\">{success}</span>\n            </div>\n          )}\n\n          {/* Login Form */}\n          {isLogin ? (\n            <form onSubmit={handleLoginSubmit} className=\"space-y-6\">\n              <div>\n                <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">\n                  Email address\n                </label>\n                <div className=\"mt-1\">\n                  <input\n                    id=\"email\"\n                    name=\"email\"\n                    type=\"email\"\n                    autoComplete=\"email\"\n                    required\n                    value={loginForm.email}\n                    onChange={(e) => setLoginForm({ ...loginForm, email: e.target.value })}\n                    className=\"appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\n                    placeholder=\"Enter your email\"\n                  />\n                </div>\n              </div>\n\n              <div>\n                <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700\">\n                  Password\n                </label>\n                <div className=\"mt-1\">\n                  <input\n                    id=\"password\"\n                    name=\"password\"\n                    type=\"password\"\n                    autoComplete=\"current-password\"\n                    required\n                    value={loginForm.password}\n                    onChange={(e) => setLoginForm({ ...loginForm, password: e.target.value })}\n                    className=\"appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\n                    placeholder=\"Enter your password\"\n                  />\n                </div>\n              </div>\n\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center\">\n                  <input\n                    id=\"remember-me\"\n                    name=\"remember-me\"\n                    type=\"checkbox\"\n                    className=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\n                  />\n                  <label htmlFor=\"remember-me\" className=\"ml-2 block text-sm text-gray-900\">\n                    Remember me\n                  </label>\n                </div>\n\n                <div className=\"text-sm\">\n                  <a href=\"#\" className=\"font-medium text-blue-600 hover:text-blue-500\">\n                    Forgot your password?\n                  </a>\n                </div>\n              </div>\n\n              <div>\n                <button\n                  type=\"submit\"\n                  disabled={loading}\n                  className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed\"\n                >\n                  {loading ? 'Signing in...' : 'Sign in'}\n                </button>\n              </div>\n            </form>\n          ) : (\n            /* Register Form */\n            <form onSubmit={handleRegisterSubmit} className=\"space-y-6\">\n              <div>\n                <label htmlFor=\"name\" className=\"block text-sm font-medium text-gray-700\">\n                  Full name\n                </label>\n                <div className=\"mt-1\">\n                  <input\n                    id=\"name\"\n                    name=\"name\"\n                    type=\"text\"\n                    autoComplete=\"name\"\n                    required\n                    value={registerForm.name}\n                    onChange={(e) => setRegisterForm({ ...registerForm, name: e.target.value })}\n                    className=\"appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\n                    placeholder=\"Enter your full name\"\n                  />\n                </div>\n              </div>\n\n              <div>\n                <label htmlFor=\"register-email\" className=\"block text-sm font-medium text-gray-700\">\n                  Email address\n                </label>\n                <div className=\"mt-1\">\n                  <input\n                    id=\"register-email\"\n                    name=\"email\"\n                    type=\"email\"\n                    autoComplete=\"email\"\n                    required\n                    value={registerForm.email}\n                    onChange={(e) => setRegisterForm({ ...registerForm, email: e.target.value })}\n                    className=\"appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\n                    placeholder=\"Enter your email\"\n                  />\n                </div>\n              </div>\n\n              <div>\n                <label htmlFor=\"register-password\" className=\"block text-sm font-medium text-gray-700\">\n                  Password\n                </label>\n                <div className=\"mt-1\">\n                  <input\n                    id=\"register-password\"\n                    name=\"password\"\n                    type=\"password\"\n                    autoComplete=\"new-password\"\n                    required\n                    value={registerForm.password}\n                    onChange={(e) => setRegisterForm({ ...registerForm, password: e.target.value })}\n                    className=\"appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\n                    placeholder=\"Create a password\"\n                  />\n                </div>\n              </div>\n\n              <div>\n                <label htmlFor=\"confirm-password\" className=\"block text-sm font-medium text-gray-700\">\n                  Confirm password\n                </label>\n                <div className=\"mt-1\">\n                  <input\n                    id=\"confirm-password\"\n                    name=\"confirmPassword\"\n                    type=\"password\"\n                    autoComplete=\"new-password\"\n                    required\n                    value={registerForm.confirmPassword}\n                    onChange={(e) => setRegisterForm({ ...registerForm, confirmPassword: e.target.value })}\n                    className=\"appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\n                    placeholder=\"Confirm your password\"\n                  />\n                </div>\n              </div>\n\n              <div>\n                <button\n                  type=\"submit\"\n                  disabled={loading}\n                  className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed\"\n                >\n                  {loading ? 'Creating account...' : 'Create account'}\n                </button>\n              </div>\n            </form>\n          )}\n\n          {/* Back to Home */}\n          <div className=\"mt-6 text-center\">\n            <Link\n              href=\"/\"\n              className=\"text-sm text-gray-600 hover:text-gray-900 flex items-center justify-center\"\n            >\n              <svg className=\"w-4 h-4 mr-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 19l-7-7 7-7\" />\n              </svg>\n              Back to shopping\n            </Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginPage;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 761, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/node_modules/next/navigation.js"],"sourcesContent":["module.exports = require('./dist/client/components/navigation')\n"],"names":[],"mappings":"AAAA,OAAO,OAAO","ignoreList":[0],"debugId":null}}]
}